# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/coverage.cobertura.xml
    - name: Install reportgenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
    - name: Generate coverage report
      run: reportgenerator -reports:./TestResults/coverage.cobertura.xml -targetdir:./TestResults/CoverageReport
    - name: Check controller coverage threshold
      run: |
        # Generate the report and filter for the Controllers namespace
        reportgenerator -reports:./TestResults/coverage.cobertura.xml -targetdir:./TestResults/CoverageReport -reporttypes:HtmlInline_AzurePipelines -classfilters:+*Controller*
        # Extract the coverage percentage for the Controllers namespace
        COVERAGE=$(grep -oP '(?<=class="[^"]*Controller[^"]*">)[0-9]+\.[0-9]+' ./TestResults/CoverageReport/index.htm | awk '{sum += $1; count++} END {if (count > 0) print sum / count}')
        echo "Controller Coverage is $COVERAGE%"
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "Controller code coverage is below 80%"
          exit 1
        fi
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./TestResults/**/coverage.cobertura.xml
        verbose: true
